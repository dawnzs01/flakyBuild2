# This is a basic workflow to help you get started with Actions

name: Build Jar

# Controls when the action will run.
on:
  push:
    branches: [ aliyundrive-webdav ]























jobs:
  buildx:
    runs-on: ${{ matrix.target.os }}
    strategy:
      matrix:
        target:
          - { os: ubuntu-22.04, arch: amd64, suffix: linux }
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Get current date
        id: date
        run: echo "::set-output name=today::$(date +'%Y%m%d')"
      -
        name: Installing Graalvm dependencies
        run: sudo apt install -y make gcc libz-dev
        if:  matrix.target.suffix  == 'linux'
      -
        name: Setup Graalvm
        uses: graalvm/setup-graalvm@v1.0.12
        with:
          version: '22.3.2'
          java-version: '17'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cache: 'gradle'
      - run: chmod +x ./gradlew
      # Set VERSION_INFORMATION
      - run: echo "VERSION_INFORMATION=$(${{github.workspace}}/gradlew --no-daemon -q ciPrintVersionInformation)" >> $GITHUB_ENV
      -
        name: Build project
        run: ./gradlew --no-daemon :bootJar
      -
        name: Upload artifacts
        uses: Wandalen/wretry.action@v1.0.36
        with:
          action: bxb100/action-upload-webdav@v1
          with: |
            webdav_address: ${{secrets.WEBDAV_ADDRESS}}
            webdav_username: ${{secrets.WEBDAV_USERNAME}}
            webdav_password: ${{secrets.WEBDAV_PASSWORD}}
            webdav_upload_path: "/${{ env.VERSION_INFORMATION }}"
            files: |
              build/libs/aliyundrive-webdav-${{ env.VERSION_INFORMATION }}.jar
          attempt_limit: 3
          attempt_delay: 0
