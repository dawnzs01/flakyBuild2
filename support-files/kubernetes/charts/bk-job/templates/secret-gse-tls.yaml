{{- if not .Values.gse.existingTlsSecret }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ printf "%s-gse-%s" (include "common.names.fullname" .) "tls-cert" }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "2"
    "helm.sh/hook-delete-policy": before-hook-creation
    {{- if .Values.commonAnnotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | indent 4 }}
    {{- end }}
type: Opaque
data:
  {{- if and (.Files.Get "cert/gse_job_api_client.keystore") (.Files.Get "cert/gse_job_api_client.truststore") }}
  gse.keystore: {{ .Files.Get "cert/gse_job_api_client.keystore" | b64enc }}
  gse.truststore: {{ .Files.Get "cert/gse_job_api_client.truststore" | b64enc }}
  {{- else }}
  gse.keystore: {{ .Values.gse.ssl.keystore.base64Content }}
  gse.truststore: {{ .Values.gse.ssl.truststore.base64Content }}
  {{- end }}
  gse.keystore.password: {{ .Values.gse.ssl.keystore.password | b64enc | quote }}
  gse.truststore.password: {{ .Values.gse.ssl.truststore.password | b64enc | quote }}
{{- end }}
