// Generated from io/edurt/datacap/sql/parser/SqlBase.g4 by ANTLR 4.12.0
package io.edurt.datacap.sql.parser;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue"})
public class SqlBaseLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.12.0", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, SHOW=2, PATHS=3, TOPICS=4, CONSUMERS=5, DATABASES=6, TABLES=7, 
		SELECT=8, FROM=9, STRING=10, IDENTIFIER=11, BACKQUOTED_IDENTIFIER=12, 
		SIMPLE_COMMENT=13, BRACKETED_EMPTY_COMMENT=14, BRACKETED_COMMENT=15, WS=16;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "SHOW", "PATHS", "TOPICS", "CONSUMERS", "DATABASES", "TABLES", 
			"SELECT", "FROM", "DIGIT", "LETTER", "STRING", "IDENTIFIER", "BACKQUOTED_IDENTIFIER", 
			"SIMPLE_COMMENT", "BRACKETED_EMPTY_COMMENT", "BRACKETED_COMMENT", "WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'.'", null, null, "'TOPICS'", "'CONSUMERS'", null, null, null, 
			null, null, null, null, null, "'/**/'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, "SHOW", "PATHS", "TOPICS", "CONSUMERS", "DATABASES", "TABLES", 
			"SELECT", "FROM", "STRING", "IDENTIFIER", "BACKQUOTED_IDENTIFIER", "SIMPLE_COMMENT", 
			"BRACKETED_EMPTY_COMMENT", "BRACKETED_COMMENT", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public SqlBaseLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "SqlBase.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u0010\u00bb\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002"+
		"\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003"+
		"\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004"+
		"\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0007"+
		"\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\t\u0001\t\u0001\n\u0001"+
		"\n\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0005\u000bi\b\u000b"+
		"\n\u000b\f\u000bl\t\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b"+
		"\u0001\u000b\u0005\u000bs\b\u000b\n\u000b\f\u000bv\t\u000b\u0001\u000b"+
		"\u0001\u000b\u0003\u000bz\b\u000b\u0001\f\u0001\f\u0001\f\u0004\f\u007f"+
		"\b\f\u000b\f\f\f\u0080\u0001\r\u0001\r\u0001\r\u0001\r\u0005\r\u0087\b"+
		"\r\n\r\f\r\u008a\t\r\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001\u000e"+
		"\u0001\u000e\u0005\u000e\u0092\b\u000e\n\u000e\f\u000e\u0095\t\u000e\u0001"+
		"\u000e\u0003\u000e\u0098\b\u000e\u0001\u000e\u0003\u000e\u009b\b\u000e"+
		"\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f"+
		"\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u0010\u0001\u0010\u0001\u0010"+
		"\u0001\u0010\u0001\u0010\u0005\u0010\u00ab\b\u0010\n\u0010\f\u0010\u00ae"+
		"\t\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001"+
		"\u0011\u0004\u0011\u00b6\b\u0011\u000b\u0011\f\u0011\u00b7\u0001\u0011"+
		"\u0001\u0011\u0001\u00ac\u0000\u0012\u0001\u0001\u0003\u0002\u0005\u0003"+
		"\u0007\u0004\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013\u0000\u0015"+
		"\u0000\u0017\n\u0019\u000b\u001b\f\u001d\r\u001f\u000e!\u000f#\u0010\u0001"+
		"\u0000\u0018\u0002\u0000SSss\u0002\u0000HHhh\u0002\u0000OOoo\u0002\u0000"+
		"WWww\u0002\u0000PPpp\u0002\u0000AAaa\u0002\u0000TTtt\u0002\u0000DDdd\u0002"+
		"\u0000BBbb\u0002\u0000EEss\u0002\u0000LLll\u0002\u0000EEee\u0002\u0000"+
		"CCcc\u0002\u0000FFff\u0002\u0000RRrr\u0002\u0000MMmm\u0001\u000009\u0002"+
		"\u0000AZaz\u0002\u0000\'\'\\\\\u0002\u0000\"\"\\\\\u0001\u0000``\u0002"+
		"\u0000\n\n\r\r\u0001\u0000++\u0003\u0000\t\n\r\r  \u00c8\u0000\u0001\u0001"+
		"\u0000\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005\u0001"+
		"\u0000\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000"+
		"\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000"+
		"\u0000\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000"+
		"\u0000\u0000\u0017\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000"+
		"\u0000\u0000\u001b\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000\u0000"+
		"\u0000\u0000\u001f\u0001\u0000\u0000\u0000\u0000!\u0001\u0000\u0000\u0000"+
		"\u0000#\u0001\u0000\u0000\u0000\u0001%\u0001\u0000\u0000\u0000\u0003\'"+
		"\u0001\u0000\u0000\u0000\u0005,\u0001\u0000\u0000\u0000\u00072\u0001\u0000"+
		"\u0000\u0000\t9\u0001\u0000\u0000\u0000\u000bC\u0001\u0000\u0000\u0000"+
		"\rM\u0001\u0000\u0000\u0000\u000fT\u0001\u0000\u0000\u0000\u0011[\u0001"+
		"\u0000\u0000\u0000\u0013`\u0001\u0000\u0000\u0000\u0015b\u0001\u0000\u0000"+
		"\u0000\u0017y\u0001\u0000\u0000\u0000\u0019~\u0001\u0000\u0000\u0000\u001b"+
		"\u0082\u0001\u0000\u0000\u0000\u001d\u008d\u0001\u0000\u0000\u0000\u001f"+
		"\u009e\u0001\u0000\u0000\u0000!\u00a5\u0001\u0000\u0000\u0000#\u00b5\u0001"+
		"\u0000\u0000\u0000%&\u0005.\u0000\u0000&\u0002\u0001\u0000\u0000\u0000"+
		"\'(\u0007\u0000\u0000\u0000()\u0007\u0001\u0000\u0000)*\u0007\u0002\u0000"+
		"\u0000*+\u0007\u0003\u0000\u0000+\u0004\u0001\u0000\u0000\u0000,-\u0007"+
		"\u0004\u0000\u0000-.\u0007\u0005\u0000\u0000./\u0007\u0006\u0000\u0000"+
		"/0\u0007\u0001\u0000\u000001\u0007\u0000\u0000\u00001\u0006\u0001\u0000"+
		"\u0000\u000023\u0005T\u0000\u000034\u0005O\u0000\u000045\u0005P\u0000"+
		"\u000056\u0005I\u0000\u000067\u0005C\u0000\u000078\u0005S\u0000\u0000"+
		"8\b\u0001\u0000\u0000\u00009:\u0005C\u0000\u0000:;\u0005O\u0000\u0000"+
		";<\u0005N\u0000\u0000<=\u0005S\u0000\u0000=>\u0005U\u0000\u0000>?\u0005"+
		"M\u0000\u0000?@\u0005E\u0000\u0000@A\u0005R\u0000\u0000AB\u0005S\u0000"+
		"\u0000B\n\u0001\u0000\u0000\u0000CD\u0007\u0007\u0000\u0000DE\u0007\u0005"+
		"\u0000\u0000EF\u0007\u0006\u0000\u0000FG\u0007\u0005\u0000\u0000GH\u0007"+
		"\b\u0000\u0000HI\u0007\u0005\u0000\u0000IJ\u0007\u0000\u0000\u0000JK\u0007"+
		"\t\u0000\u0000KL\u0007\u0000\u0000\u0000L\f\u0001\u0000\u0000\u0000MN"+
		"\u0007\u0006\u0000\u0000NO\u0007\u0005\u0000\u0000OP\u0007\b\u0000\u0000"+
		"PQ\u0007\n\u0000\u0000QR\u0007\u000b\u0000\u0000RS\u0007\u0000\u0000\u0000"+
		"S\u000e\u0001\u0000\u0000\u0000TU\u0007\u0000\u0000\u0000UV\u0007\u000b"+
		"\u0000\u0000VW\u0007\n\u0000\u0000WX\u0007\u000b\u0000\u0000XY\u0007\f"+
		"\u0000\u0000YZ\u0007\u0006\u0000\u0000Z\u0010\u0001\u0000\u0000\u0000"+
		"[\\\u0007\r\u0000\u0000\\]\u0007\u000e\u0000\u0000]^\u0007\u0002\u0000"+
		"\u0000^_\u0007\u000f\u0000\u0000_\u0012\u0001\u0000\u0000\u0000`a\u0007"+
		"\u0010\u0000\u0000a\u0014\u0001\u0000\u0000\u0000bc\u0007\u0011\u0000"+
		"\u0000c\u0016\u0001\u0000\u0000\u0000dj\u0005\'\u0000\u0000ei\b\u0012"+
		"\u0000\u0000fg\u0005\\\u0000\u0000gi\t\u0000\u0000\u0000he\u0001\u0000"+
		"\u0000\u0000hf\u0001\u0000\u0000\u0000il\u0001\u0000\u0000\u0000jh\u0001"+
		"\u0000\u0000\u0000jk\u0001\u0000\u0000\u0000km\u0001\u0000\u0000\u0000"+
		"lj\u0001\u0000\u0000\u0000mz\u0005\'\u0000\u0000nt\u0005\"\u0000\u0000"+
		"os\b\u0013\u0000\u0000pq\u0005\\\u0000\u0000qs\t\u0000\u0000\u0000ro\u0001"+
		"\u0000\u0000\u0000rp\u0001\u0000\u0000\u0000sv\u0001\u0000\u0000\u0000"+
		"tr\u0001\u0000\u0000\u0000tu\u0001\u0000\u0000\u0000uw\u0001\u0000\u0000"+
		"\u0000vt\u0001\u0000\u0000\u0000wz\u0005\"\u0000\u0000xz\u0005*\u0000"+
		"\u0000yd\u0001\u0000\u0000\u0000yn\u0001\u0000\u0000\u0000yx\u0001\u0000"+
		"\u0000\u0000z\u0018\u0001\u0000\u0000\u0000{\u007f\u0003\u0015\n\u0000"+
		"|\u007f\u0003\u0013\t\u0000}\u007f\u0005_\u0000\u0000~{\u0001\u0000\u0000"+
		"\u0000~|\u0001\u0000\u0000\u0000~}\u0001\u0000\u0000\u0000\u007f\u0080"+
		"\u0001\u0000\u0000\u0000\u0080~\u0001\u0000\u0000\u0000\u0080\u0081\u0001"+
		"\u0000\u0000\u0000\u0081\u001a\u0001\u0000\u0000\u0000\u0082\u0088\u0005"+
		"`\u0000\u0000\u0083\u0087\b\u0014\u0000\u0000\u0084\u0085\u0005`\u0000"+
		"\u0000\u0085\u0087\u0005`\u0000\u0000\u0086\u0083\u0001\u0000\u0000\u0000"+
		"\u0086\u0084\u0001\u0000\u0000\u0000\u0087\u008a\u0001\u0000\u0000\u0000"+
		"\u0088\u0086\u0001\u0000\u0000\u0000\u0088\u0089\u0001\u0000\u0000\u0000"+
		"\u0089\u008b\u0001\u0000\u0000\u0000\u008a\u0088\u0001\u0000\u0000\u0000"+
		"\u008b\u008c\u0005`\u0000\u0000\u008c\u001c\u0001\u0000\u0000\u0000\u008d"+
		"\u008e\u0005-\u0000\u0000\u008e\u008f\u0005-\u0000\u0000\u008f\u0093\u0001"+
		"\u0000\u0000\u0000\u0090\u0092\b\u0015\u0000\u0000\u0091\u0090\u0001\u0000"+
		"\u0000\u0000\u0092\u0095\u0001\u0000\u0000\u0000\u0093\u0091\u0001\u0000"+
		"\u0000\u0000\u0093\u0094\u0001\u0000\u0000\u0000\u0094\u0097\u0001\u0000"+
		"\u0000\u0000\u0095\u0093\u0001\u0000\u0000\u0000\u0096\u0098\u0005\r\u0000"+
		"\u0000\u0097\u0096\u0001\u0000\u0000\u0000\u0097\u0098\u0001\u0000\u0000"+
		"\u0000\u0098\u009a\u0001\u0000\u0000\u0000\u0099\u009b\u0005\n\u0000\u0000"+
		"\u009a\u0099\u0001\u0000\u0000\u0000\u009a\u009b\u0001\u0000\u0000\u0000"+
		"\u009b\u009c\u0001\u0000\u0000\u0000\u009c\u009d\u0006\u000e\u0000\u0000"+
		"\u009d\u001e\u0001\u0000\u0000\u0000\u009e\u009f\u0005/\u0000\u0000\u009f"+
		"\u00a0\u0005*\u0000\u0000\u00a0\u00a1\u0005*\u0000\u0000\u00a1\u00a2\u0005"+
		"/\u0000\u0000\u00a2\u00a3\u0001\u0000\u0000\u0000\u00a3\u00a4\u0006\u000f"+
		"\u0000\u0000\u00a4 \u0001\u0000\u0000\u0000\u00a5\u00a6\u0005/\u0000\u0000"+
		"\u00a6\u00a7\u0005*\u0000\u0000\u00a7\u00a8\u0001\u0000\u0000\u0000\u00a8"+
		"\u00ac\b\u0016\u0000\u0000\u00a9\u00ab\t\u0000\u0000\u0000\u00aa\u00a9"+
		"\u0001\u0000\u0000\u0000\u00ab\u00ae\u0001\u0000\u0000\u0000\u00ac\u00ad"+
		"\u0001\u0000\u0000\u0000\u00ac\u00aa\u0001\u0000\u0000\u0000\u00ad\u00af"+
		"\u0001\u0000\u0000\u0000\u00ae\u00ac\u0001\u0000\u0000\u0000\u00af\u00b0"+
		"\u0005*\u0000\u0000\u00b0\u00b1\u0005/\u0000\u0000\u00b1\u00b2\u0001\u0000"+
		"\u0000\u0000\u00b2\u00b3\u0006\u0010\u0000\u0000\u00b3\"\u0001\u0000\u0000"+
		"\u0000\u00b4\u00b6\u0007\u0017\u0000\u0000\u00b5\u00b4\u0001\u0000\u0000"+
		"\u0000\u00b6\u00b7\u0001\u0000\u0000\u0000\u00b7\u00b5\u0001\u0000\u0000"+
		"\u0000\u00b7\u00b8\u0001\u0000\u0000\u0000\u00b8\u00b9\u0001\u0000\u0000"+
		"\u0000\u00b9\u00ba\u0006\u0011\u0000\u0000\u00ba$\u0001\u0000\u0000\u0000"+
		"\u000f\u0000hjrty~\u0080\u0086\u0088\u0093\u0097\u009a\u00ac\u00b7\u0001"+
		"\u0000\u0001\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}