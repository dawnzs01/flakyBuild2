package pkg;

import java.lang.invoke.MethodHandles;
import java.lang.invoke.VarHandle;
import java.lang.invoke.MethodHandles.Lookup;

public class TestVarHandles {
   private static final Lookup LOOKUP = MethodHandles.lookup();

   public void test1() throws ReflectiveOperationException {
      VarHandle lookupHandle = LOOKUP.findStaticVarHandle(TestVarHandles.class, "LOOKUP", Lookup.class);// 9
      Lookup lookup = (Lookup)lookupHandle.get();// 10
   }// 11

   public void test2() {
      String[] arr = new String[]{"a"};// 14
      VarHandle elementHandle = MethodHandles.arrayElementVarHandle(String[].class);// 15
      boolean success = elementHandle.compareAndSet(arr, 0, "a", "b");// 16
      System.out.println(success);// 17
   }// 18
}

class 'pkg/TestVarHandles' {
   method 'test1 ()V' {
      0      10
      1      10
      2      10
      3      10
      4      10
      5      10
      6      10
      7      10
      8      10
      9      10
      a      10
      b      10
      c      10
      d      11
      e      11
      f      11
      10      11
      11      11
      12      12
   }

   method 'test2 ()V' {
      6      15
      7      15
      9      15
      a      16
      b      16
      c      16
      d      16
      e      16
      f      16
      10      17
      11      17
      12      17
      13      17
      14      17
      15      17
      16      17
      17      17
      18      17
      19      17
      1a      17
      1b      18
      1c      18
      1d      18
      1e      18
      1f      18
      20      18
      21      18
      22      19
   }
}

Lines mapping:
9 <-> 11
10 <-> 12
11 <-> 13
14 <-> 16
15 <-> 17
16 <-> 18
17 <-> 19
18 <-> 20
