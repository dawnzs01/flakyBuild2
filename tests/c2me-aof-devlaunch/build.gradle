evaluationDependsOn(":tests")
evaluationDependsOn(":tests:test-mod")

sourceSets {
    testmod {
        compileClasspath += main.compileClasspath
        runtimeClasspath += main.runtimeClasspath
    }
}

loom {
    runs {
        devlaunchC2MEAOFServer {
            server()
            runDir getRootProject().getProjectDir().toPath().relativize(project.getProjectDir().toPath()).resolve("run-${project.minecraft_version}-server").toString()
            source sourceSets.testmod
            vmArgs "-Dcom.ishland.c2me.common.config.threadedWorldGen.reduceLockRadius=true",
                    "-Dcom.ishland.c2me.common.config.threadedWorldGen.enabled=true",
                    "-Dcom.ishland.c2me.common.config.threadedWorldGen.useGlobalBiomeCache=true",
                    "-Dcom.ishland.c2me.common.config.asyncScheduling.enabled=true",
                    "-Dcom.ishland.c2me.common.config.noTickViewDistance.enabled=true",
                    "--add-modules jdk.incubator.vector",
                    "-Dcom.ishland.c2me.tests.testmod.disablePreGen=true"
        }
        devlaunchC2MEAOFClient {
            client()
            runDir getRootProject().getProjectDir().toPath().relativize(project.getProjectDir().toPath()).resolve("run-${project.minecraft_version}").toString()
            source sourceSets.testmod
            vmArgs "-Dcom.ishland.c2me.common.config.threadedWorldGen.reduceLockRadius=true",
                    "-Dcom.ishland.c2me.common.config.threadedWorldGen.enabled=true",
                    "-Dcom.ishland.c2me.common.config.threadedWorldGen.useGlobalBiomeCache=true",
                    "-Dcom.ishland.c2me.common.config.asyncScheduling.enabled=true",
                    "-Dcom.ishland.c2me.common.config.noTickViewDistance.enabled=true",
                    "--add-modules jdk.incubator.vector",
                    "-Dmixin.debug.export=true",
                    "-Dcom.ishland.c2me.tests.testmod.disablePreGen=true"
        }
    }
}

migrateMappings.onlyIf { false }

dependencies {
    testmodImplementation project(":tests:test-mod").sourceSets.main.output
    testmodImplementation project(":").sourceSets.main.output
    testmodImplementation project(":").configurations.getByName("includeApi").allDependencies
    testmodImplementation project(":").configurations.getByName("shadowImpl").allDependencies
    testmodImplementation project(":").configurations.getByName("shadowRuntime").allDependencies
    curseforgeModpack "curse.modpack:486691:3487730"
}

test {
    useJUnitPlatform()
}
