package pkg;

import java.util.function.Supplier;

public abstract class TestLocalClass {
   void foo() {
      int a = 5;// 9

      class Local {
         void foo() {
            int b = 5;// 12
            int v = 5;// 13
         }// 14
      }

      Local l = new Local();// 16
      l.foo();// 17
   }// 18

   void boo() {
      int a = 5;// 21
   }// 22

   void zoo() {
      int a = 5;// 25
   }// 26

   void bar() {
      class C {
      }

      Supplier<C> constr = () -> new C();// 30
   }// 31
}

class 'pkg/TestLocalClass' {
   method 'foo ()V' {
      0      6
      1      6
      a      15
      b      16
      c      16
      d      16
      e      16
      f      17
   }

   method 'boo ()V' {
      0      20
      1      20
      2      21
   }

   method 'zoo ()V' {
      0      24
      1      24
      2      25
   }

   method 'bar ()V' {
      6      31
      7      32
   }

   method 'lambda$bar$0 ()Lpkg/TestLocalClass$1C;' {
      8      31
   }
}

class 'pkg/TestLocalClass$1Local' {
   method 'foo ()V' {
      0      10
      1      10
      2      11
      3      11
      4      12
   }
}

Lines mapping:
9 <-> 7
12 <-> 11
13 <-> 12
14 <-> 13
16 <-> 16
17 <-> 17
18 <-> 18
21 <-> 21
22 <-> 22
25 <-> 25
26 <-> 26
30 <-> 32
31 <-> 33
