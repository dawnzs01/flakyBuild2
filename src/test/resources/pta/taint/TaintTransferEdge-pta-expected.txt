Points-to sets of all variables
[]:<A: void <init>()>/%this -> [[]:NewObj{<TaintTransferEdge: A getSource()>[0@L11] new C}, []:NewObj{<TaintTransferEdge: void simpleTaint()>[0@L16] new B}, []:NewObj{<TaintTransferEdge: void simpleTaint()>[6@L20] new C}, []:NewObj{<TaintTransferEdge: void varToArray()>[5@L49] new B}, []:NewObj{<TaintTransferEdge: void varToField()>[6@L61] new B}]
[]:<A: void transfer(A)>/%this -> [[]:NewObj{<TaintTransferEdge: void simpleTaint()>[6@L20] new C}, []:TaintObj{alloc=<TaintTransferEdge: void simpleTaint()>[3@L17] temp$1 = invokestatic TaintTransferEdge.getSource()/result,type=C}]
[]:<A: void transfer(A)>/taint -> [[]:NewObj{<TaintTransferEdge: A getSource()>[0@L11] new C}, []:NewObj{<TaintTransferEdge: void simpleTaint()>[0@L16] new B}, []:TaintObj{alloc=<TaintTransferEdge: void simpleTaint()>[3@L17] temp$1 = invokestatic TaintTransferEdge.getSource()/result,type=C}]
[]:<ABox: void <init>(A)>/%this -> [[]:NewObj{<TaintTransferEdge: void fieldToVar()>[3@L41] new ABox}]
[]:<ABox: void <init>(A)>/a -> [[]:NewObj{<TaintTransferEdge: A getSource()>[0@L11] new C}, []:TaintObj{alloc=<TaintTransferEdge: void fieldToVar()>[0@L40] temp$0 = invokestatic TaintTransferEdge.getSource()/result,type=C}]
[]:<B: void <init>()>/%this -> [[]:NewObj{<TaintTransferEdge: void simpleTaint()>[0@L16] new B}, []:NewObj{<TaintTransferEdge: void varToArray()>[5@L49] new B}, []:NewObj{<TaintTransferEdge: void varToField()>[6@L61] new B}]
[]:<B: void sink(A)>/%this -> [[]:NewObj{<TaintTransferEdge: void simpleTaint()>[0@L16] new B}, []:NewObj{<TaintTransferEdge: void varToArray()>[5@L49] new B}, []:NewObj{<TaintTransferEdge: void varToField()>[6@L61] new B}]
[]:<B: void sink(A)>/a -> [[]:NewObj{<TaintTransferEdge: A getSource()>[0@L11] new C}, []:NewObj{<TaintTransferEdge: void simpleTaint()>[0@L16] new B}, []:NewObj{<TaintTransferEdge: void simpleTaint()>[6@L20] new C}, []:TaintObj{alloc=<TaintTransferEdge: void simpleTaint()>[3@L17] temp$1 = invokestatic TaintTransferEdge.getSource()/result,type=C}, []:TaintObj{alloc=<TaintTransferEdge: void varToArray()>[0@L46] temp$0 = invokestatic TaintTransferEdge.getSource()/result,type=A}, []:TaintObj{alloc=<TaintTransferEdge: void varToField()>[0@L58] temp$0 = invokestatic TaintTransferEdge.getSource()/result,type=A}]
[]:<C: void <init>()>/%this -> [[]:NewObj{<TaintTransferEdge: A getSource()>[0@L11] new C}, []:NewObj{<TaintTransferEdge: void simpleTaint()>[6@L20] new C}]
[]:<C: void sink(A)>/%this -> [[]:NewObj{<TaintTransferEdge: A getSource()>[0@L11] new C}, []:NewObj{<TaintTransferEdge: void simpleTaint()>[6@L20] new C}, []:TaintObj{alloc=<TaintTransferEdge: void simpleTaint()>[3@L17] temp$1 = invokestatic TaintTransferEdge.getSource()/result,type=C}]
[]:<C: void sink(A)>/a -> [[]:NewObj{<TaintTransferEdge: A getSource()>[0@L11] new C}, []:NewObj{<TaintTransferEdge: void simpleTaint()>[0@L16] new B}, []:NewObj{<TaintTransferEdge: void simpleTaint()>[6@L20] new C}, []:TaintObj{alloc=<TaintTransferEdge: void simpleTaint()>[3@L17] temp$1 = invokestatic TaintTransferEdge.getSource()/result,type=C}]
[]:<Expression: java.lang.Object getValue()>/%this -> [[]:NewObj{<TaintTransferEdge: void arrayToVar()>[2@L35] new Expression}, []:NewObj{<TaintTransferEdge: void fieldToVar()>[2@L41] new Expression}, []:TaintObj{alloc=<TaintTransferEdge: void arrayToVar()>[0@L34] temp$0 = invokestatic TaintTransferEdge.getSource()/result,type=Expression}, []:TaintObj{alloc=<TaintTransferEdge: void fieldToVar()>[0@L40] temp$0 = invokestatic TaintTransferEdge.getSource()/result,type=Expression}]
[]:<Expression: java.lang.Object getValue()>/temp$0 -> [[]:ConstantObj{java.lang.String: "value"}]
[]:<Expression: void <init>()>/%this -> [[]:NewObj{<TaintTransferEdge: void varToField()>[2@L59] new Expression}]
[]:<Expression: void <init>(ABox)>/%this -> [[]:NewObj{<TaintTransferEdge: void fieldToVar()>[2@L41] new Expression}, []:TaintObj{alloc=<TaintTransferEdge: void fieldToVar()>[0@L40] temp$0 = invokestatic TaintTransferEdge.getSource()/result,type=Expression}]
[]:<Expression: void <init>(ABox)>/abox -> [[]:NewObj{<TaintTransferEdge: void fieldToVar()>[3@L41] new ABox}]
[]:<Expression: void <init>(ABox)>/temp$0 -> [[]:NewObj{<TaintTransferEdge: A getSource()>[0@L11] new C}, []:TaintObj{alloc=<TaintTransferEdge: void fieldToVar()>[0@L40] temp$0 = invokestatic TaintTransferEdge.getSource()/result,type=C}]
[]:<Expression: void <init>(java.lang.Object[])>/%this -> [[]:NewObj{<TaintTransferEdge: void arrayToVar()>[2@L35] new Expression}, []:TaintObj{alloc=<TaintTransferEdge: void arrayToVar()>[0@L34] temp$0 = invokestatic TaintTransferEdge.getSource()/result,type=Expression}]
[]:<Expression: void <init>(java.lang.Object[])>/cmds -> [[]:NewObj{<TaintTransferEdge: void arrayToVar()>[4@L35] newarray java.lang.Object[%intconst0]}]
[]:<TaintTransferEdge: A getSource()>/temp$0 -> [[]:NewObj{<TaintTransferEdge: A getSource()>[0@L11] new C}]
[]:<TaintTransferEdge: void arrayToVar()>/exp -> [[]:NewObj{<TaintTransferEdge: void arrayToVar()>[2@L35] new Expression}, []:TaintObj{alloc=<TaintTransferEdge: void arrayToVar()>[0@L34] temp$0 = invokestatic TaintTransferEdge.getSource()/result,type=Expression}]
[]:<TaintTransferEdge: void arrayToVar()>/taint -> [[]:NewObj{<TaintTransferEdge: A getSource()>[0@L11] new C}, []:TaintObj{alloc=<TaintTransferEdge: void arrayToVar()>[0@L34] temp$0 = invokestatic TaintTransferEdge.getSource()/result,type=C}]
[]:<TaintTransferEdge: void arrayToVar()>/temp$0 -> [[]:NewObj{<TaintTransferEdge: A getSource()>[0@L11] new C}, []:TaintObj{alloc=<TaintTransferEdge: void arrayToVar()>[0@L34] temp$0 = invokestatic TaintTransferEdge.getSource()/result,type=C}]
[]:<TaintTransferEdge: void arrayToVar()>/temp$1 -> [[]:NewObj{<TaintTransferEdge: void arrayToVar()>[2@L35] new Expression}, []:TaintObj{alloc=<TaintTransferEdge: void arrayToVar()>[0@L34] temp$0 = invokestatic TaintTransferEdge.getSource()/result,type=Expression}]
[]:<TaintTransferEdge: void arrayToVar()>/temp$2 -> [[]:NewObj{<TaintTransferEdge: void arrayToVar()>[4@L35] newarray java.lang.Object[%intconst0]}]
[]:<TaintTransferEdge: void fieldToVar()>/exp -> [[]:NewObj{<TaintTransferEdge: void fieldToVar()>[2@L41] new Expression}, []:TaintObj{alloc=<TaintTransferEdge: void fieldToVar()>[0@L40] temp$0 = invokestatic TaintTransferEdge.getSource()/result,type=Expression}]
[]:<TaintTransferEdge: void fieldToVar()>/taint -> [[]:NewObj{<TaintTransferEdge: A getSource()>[0@L11] new C}, []:TaintObj{alloc=<TaintTransferEdge: void fieldToVar()>[0@L40] temp$0 = invokestatic TaintTransferEdge.getSource()/result,type=C}]
[]:<TaintTransferEdge: void fieldToVar()>/temp$0 -> [[]:NewObj{<TaintTransferEdge: A getSource()>[0@L11] new C}, []:TaintObj{alloc=<TaintTransferEdge: void fieldToVar()>[0@L40] temp$0 = invokestatic TaintTransferEdge.getSource()/result,type=C}]
[]:<TaintTransferEdge: void fieldToVar()>/temp$1 -> [[]:NewObj{<TaintTransferEdge: void fieldToVar()>[2@L41] new Expression}, []:TaintObj{alloc=<TaintTransferEdge: void fieldToVar()>[0@L40] temp$0 = invokestatic TaintTransferEdge.getSource()/result,type=Expression}]
[]:<TaintTransferEdge: void fieldToVar()>/temp$2 -> [[]:NewObj{<TaintTransferEdge: void fieldToVar()>[3@L41] new ABox}]
[]:<TaintTransferEdge: void main(java.lang.String[])>/args -> [[]:EntryPointObj{alloc=<main-arguments>,type=java.lang.String[] in <TaintTransferEdge: void main(java.lang.String[])>}]
[]:<TaintTransferEdge: void simpleTaint()>/b -> [[]:NewObj{<TaintTransferEdge: void simpleTaint()>[0@L16] new B}]
[]:<TaintTransferEdge: void simpleTaint()>/c -> [[]:NewObj{<TaintTransferEdge: void simpleTaint()>[6@L20] new C}]
[]:<TaintTransferEdge: void simpleTaint()>/merge -> [[]:NewObj{<TaintTransferEdge: void simpleTaint()>[6@L20] new C}, []:TaintObj{alloc=<TaintTransferEdge: void simpleTaint()>[3@L17] temp$1 = invokestatic TaintTransferEdge.getSource()/result,type=C}]
[]:<TaintTransferEdge: void simpleTaint()>/merge2 -> [[]:NewObj{<TaintTransferEdge: A getSource()>[0@L11] new C}, []:NewObj{<TaintTransferEdge: void simpleTaint()>[0@L16] new B}, []:NewObj{<TaintTransferEdge: void simpleTaint()>[6@L20] new C}, []:TaintObj{alloc=<TaintTransferEdge: void simpleTaint()>[3@L17] temp$1 = invokestatic TaintTransferEdge.getSource()/result,type=C}]
[]:<TaintTransferEdge: void simpleTaint()>/taint -> [[]:NewObj{<TaintTransferEdge: A getSource()>[0@L11] new C}, []:NewObj{<TaintTransferEdge: void simpleTaint()>[0@L16] new B}, []:TaintObj{alloc=<TaintTransferEdge: void simpleTaint()>[3@L17] temp$1 = invokestatic TaintTransferEdge.getSource()/result,type=C}]
[]:<TaintTransferEdge: void simpleTaint()>/temp$0 -> [[]:NewObj{<TaintTransferEdge: void simpleTaint()>[0@L16] new B}]
[]:<TaintTransferEdge: void simpleTaint()>/temp$1 -> [[]:NewObj{<TaintTransferEdge: A getSource()>[0@L11] new C}, []:TaintObj{alloc=<TaintTransferEdge: void simpleTaint()>[3@L17] temp$1 = invokestatic TaintTransferEdge.getSource()/result,type=C}]
[]:<TaintTransferEdge: void simpleTaint()>/temp$2 -> [[]:NewObj{<TaintTransferEdge: void simpleTaint()>[6@L20] new C}]
[]:<TaintTransferEdge: void transfer(A,A[])>/a -> [[]:NewObj{<TaintTransferEdge: A getSource()>[0@L11] new C}, []:TaintObj{alloc=<TaintTransferEdge: void varToArray()>[0@L46] temp$0 = invokestatic TaintTransferEdge.getSource()/result,type=C}]
[]:<TaintTransferEdge: void transfer(A,A[])>/array -> [[]:NewObj{<TaintTransferEdge: void varToArray()>[3@L47] newarray A[%intconst0]}]
[]:<TaintTransferEdge: void transfer(A,Expression)>/a -> [[]:NewObj{<TaintTransferEdge: A getSource()>[0@L11] new C}, []:TaintObj{alloc=<TaintTransferEdge: void varToField()>[0@L58] temp$0 = invokestatic TaintTransferEdge.getSource()/result,type=C}]
[]:<TaintTransferEdge: void transfer(A,Expression)>/exp -> [[]:NewObj{<TaintTransferEdge: void varToField()>[2@L59] new Expression}]
[]:<TaintTransferEdge: void varToArray()>/a -> [[]:NewObj{<TaintTransferEdge: void varToArray()>[3@L47] newarray A[%intconst0]}]
[]:<TaintTransferEdge: void varToArray()>/b -> [[]:NewObj{<TaintTransferEdge: void varToArray()>[5@L49] new B}]
[]:<TaintTransferEdge: void varToArray()>/taint -> [[]:NewObj{<TaintTransferEdge: A getSource()>[0@L11] new C}, []:TaintObj{alloc=<TaintTransferEdge: void varToArray()>[0@L46] temp$0 = invokestatic TaintTransferEdge.getSource()/result,type=C}]
[]:<TaintTransferEdge: void varToArray()>/temp$0 -> [[]:NewObj{<TaintTransferEdge: A getSource()>[0@L11] new C}, []:TaintObj{alloc=<TaintTransferEdge: void varToArray()>[0@L46] temp$0 = invokestatic TaintTransferEdge.getSource()/result,type=C}]
[]:<TaintTransferEdge: void varToArray()>/temp$1 -> [[]:NewObj{<TaintTransferEdge: void varToArray()>[5@L49] new B}]
[]:<TaintTransferEdge: void varToArray()>/temp$4 -> [[]:TaintObj{alloc=<TaintTransferEdge: void varToArray()>[0@L46] temp$0 = invokestatic TaintTransferEdge.getSource()/result,type=A}]
[]:<TaintTransferEdge: void varToField()>/b -> [[]:NewObj{<TaintTransferEdge: void varToField()>[6@L61] new B}]
[]:<TaintTransferEdge: void varToField()>/exp -> [[]:NewObj{<TaintTransferEdge: void varToField()>[2@L59] new Expression}]
[]:<TaintTransferEdge: void varToField()>/taint -> [[]:NewObj{<TaintTransferEdge: A getSource()>[0@L11] new C}, []:TaintObj{alloc=<TaintTransferEdge: void varToField()>[0@L58] temp$0 = invokestatic TaintTransferEdge.getSource()/result,type=C}]
[]:<TaintTransferEdge: void varToField()>/temp$0 -> [[]:NewObj{<TaintTransferEdge: A getSource()>[0@L11] new C}, []:TaintObj{alloc=<TaintTransferEdge: void varToField()>[0@L58] temp$0 = invokestatic TaintTransferEdge.getSource()/result,type=C}]
[]:<TaintTransferEdge: void varToField()>/temp$1 -> [[]:NewObj{<TaintTransferEdge: void varToField()>[2@L59] new Expression}]
[]:<TaintTransferEdge: void varToField()>/temp$2 -> [[]:NewObj{<TaintTransferEdge: void varToField()>[6@L61] new B}]
[]:<TaintTransferEdge: void varToField()>/temp$3 -> [[]:TaintObj{alloc=<TaintTransferEdge: void varToField()>[0@L58] temp$0 = invokestatic TaintTransferEdge.getSource()/result,type=A}]

Points-to sets of all static fields

Points-to sets of all instance fields
[]:NewObj{<TaintTransferEdge: void arrayToVar()>[2@L35] new Expression}.cmds -> [[]:NewObj{<TaintTransferEdge: void arrayToVar()>[4@L35] newarray java.lang.Object[%intconst0]}]
[]:NewObj{<TaintTransferEdge: void fieldToVar()>[2@L41] new Expression}.a -> [[]:NewObj{<TaintTransferEdge: A getSource()>[0@L11] new C}, []:TaintObj{alloc=<TaintTransferEdge: void fieldToVar()>[0@L40] temp$0 = invokestatic TaintTransferEdge.getSource()/result,type=C}]
[]:NewObj{<TaintTransferEdge: void fieldToVar()>[3@L41] new ABox}.a -> [[]:NewObj{<TaintTransferEdge: A getSource()>[0@L11] new C}, []:TaintObj{alloc=<TaintTransferEdge: void fieldToVar()>[0@L40] temp$0 = invokestatic TaintTransferEdge.getSource()/result,type=C}]
[]:NewObj{<TaintTransferEdge: void varToField()>[2@L59] new Expression}.a -> [[]:TaintObj{alloc=<TaintTransferEdge: void varToField()>[0@L58] temp$0 = invokestatic TaintTransferEdge.getSource()/result,type=A}]

Points-to sets of all array indexes
[]:EntryPointObj{alloc=<main-arguments>,type=java.lang.String[] in <TaintTransferEdge: void main(java.lang.String[])>}[*] -> [[]:EntryPointObj{alloc=<main-arguments-element>,type=java.lang.String in <TaintTransferEdge: void main(java.lang.String[])>}]
[]:NewObj{<TaintTransferEdge: void arrayToVar()>[4@L35] newarray java.lang.Object[%intconst0]}[*] -> [[]:NewObj{<TaintTransferEdge: A getSource()>[0@L11] new C}, []:TaintObj{alloc=<TaintTransferEdge: void arrayToVar()>[0@L34] temp$0 = invokestatic TaintTransferEdge.getSource()/result,type=C}]
[]:NewObj{<TaintTransferEdge: void varToArray()>[3@L47] newarray A[%intconst0]}[*] -> [[]:TaintObj{alloc=<TaintTransferEdge: void varToArray()>[0@L46] temp$0 = invokestatic TaintTransferEdge.getSource()/result,type=A}]

Detected 5 taint flow(s):
TaintFlow{<TaintTransferEdge: void simpleTaint()>[3@L17] temp$1 = invokestatic TaintTransferEdge.getSource()/result -> <TaintTransferEdge: void simpleTaint()>[14@L30] invokevirtual merge2.sink(merge2)/0}
TaintFlow{<TaintTransferEdge: void arrayToVar()>[0@L34] temp$0 = invokestatic TaintTransferEdge.getSource()/result -> <TaintTransferEdge: void arrayToVar()>[9@L36] invokevirtual exp.getValue()/base}
TaintFlow{<TaintTransferEdge: void fieldToVar()>[0@L40] temp$0 = invokestatic TaintTransferEdge.getSource()/result -> <TaintTransferEdge: void fieldToVar()>[7@L42] invokevirtual exp.getValue()/base}
TaintFlow{<TaintTransferEdge: void varToArray()>[0@L46] temp$0 = invokestatic TaintTransferEdge.getSource()/result -> <TaintTransferEdge: void varToArray()>[10@L50] invokevirtual b.sink(temp$4)/0}
TaintFlow{<TaintTransferEdge: void varToField()>[0@L58] temp$0 = invokestatic TaintTransferEdge.getSource()/result -> <TaintTransferEdge: void varToField()>[10@L62] invokevirtual b.sink(temp$3)/0}

